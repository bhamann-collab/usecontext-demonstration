{"version":3,"sources":["ThemeContext.js","FunctionContextComponent.js","App.js","index.js"],"names":["ThemeContext","React","createContext","ThemeUpdateContext","useThemeUpdate","useContext","ThemeProvider","children","useState","darkTheme","setDarkTheme","Provider","value","prevDarkTheme","FunctionContextComponent","toggleTheme","themeStyles","backgroundColor","color","padding","margin","maxWidth","onClick","style","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAEMA,EAAeC,IAAMC,gBACrBC,EAAqBF,IAAMC,gBAMpBE,EAAiB,WAC1B,OAAOC,qBAAWF,IAGTG,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACTC,oBAAS,GADA,mBACpCC,EADoC,KACzBC,EADyB,KAO3C,OACI,kBAACV,EAAaW,SAAd,CAAuBC,MAAOH,GAC1B,kBAACN,EAAmBQ,SAApB,CAA6BC,MANjB,WAChBF,GAAa,SAAAG,GAAa,OAAKA,OAMtBN,KCEFO,EAtBkB,WAE7B,IAAML,EDCCJ,qBAAWL,GCAZe,EAAcX,IAEdY,EAAc,CAChBC,gBAAiBR,EAAY,UAAY,UACzCS,MAAOT,EAAY,UAAY,UAC/BU,QAAS,OACTC,OAAQ,OACRC,SAAU,SAEd,OACI,oCACI,4BAAQC,QAASP,GAAjB,gBACA,yBAAKQ,MAAOP,GACR,iDCLDQ,MATf,WAEE,OADoBpB,IAElB,kBAAC,EAAD,KACE,kBAAC,EAAD,QCJNqB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.46ce4c45.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react'\r\n\r\nconst ThemeContext = React.createContext()\r\nconst ThemeUpdateContext = React.createContext()\r\n\r\nexport const useTheme = () => {\r\n    return useContext(ThemeContext)\r\n}\r\n\r\nexport const useThemeUpdate = () => {\r\n    return useContext(ThemeUpdateContext)\r\n}\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n    const [darkTheme, setDarkTheme] = useState(true)\r\n\r\n    const toggleTheme = () => {\r\n        setDarkTheme(prevDarkTheme => !prevDarkTheme)\r\n    }\r\n\r\n    return(\r\n        <ThemeContext.Provider value={darkTheme}>\r\n            <ThemeUpdateContext.Provider value={toggleTheme}>\r\n                {children}\r\n            </ThemeUpdateContext.Provider>\r\n        </ThemeContext.Provider>\r\n    )\r\n}","import React from 'react'\r\nimport { useTheme, useThemeUpdate } from './ThemeContext'\r\n\r\nconst FunctionContextComponent = () => {\r\n\r\n    const darkTheme = useTheme()\r\n    const toggleTheme = useThemeUpdate()\r\n\r\n    const themeStyles = {\r\n        backgroundColor: darkTheme ? '#2c3e50' : '#ecf0f1',\r\n        color: darkTheme ? '#ecf0f1' : '#2c3e50',\r\n        padding: '2rem',\r\n        margin: '2rem',\r\n        maxWidth: '200px'\r\n    }\r\n    return (\r\n        <>\r\n            <button onClick={toggleTheme}>Toggle Theme</button>\r\n            <div style={themeStyles}>\r\n                <h1>Function Theme</h1>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FunctionContextComponent\r\n","import React, { useState } from 'react';\nimport FunctionContextComponent from './FunctionContextComponent'\nimport { ThemeProvider } from './ThemeContext'\nimport { useThemeUpdate } from './ThemeContext'\n\nfunction App() {\n  const toggleTheme = useThemeUpdate()\n  return (\n    <ThemeProvider>\n      <FunctionContextComponent />\n    </ThemeProvider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}